{"version":3,"sources":["serviceWorker.js","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","utils/reducerUtils.js","Redux/usersPage-reducer.js","components/Users/UserItem/usersItem.jsx","components/common/Paginator/Paginator.jsx","components/Users/Users.jsx","components/Users/UsersContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","Redux/app-reducer.js","hoc/withSuspense.jsx","Redux/redux-store.js","App.js","index.js","Redux/auth-reducer.js","components/common/Preloader/Preloader.js","components/Header/Header.module.css","components/Users/Users.module.css","components/common/Paginator/Paginator.module.css","components/Navbar/Navbar.module.css","Redux/profilePage-reducer.js","Redux/messagePage-reducer.js","assets/images/User.png","assets/images/preloader.svg","api/api.js"],"names":["Boolean","window","location","hostname","match","Navbar","props","className","s","content","item","to","activeClassName","active","friends","News","Music","Settings","updateObjectsInArray","items","itemId","objPropsName","newObjProp","map","u","FOLLOW","initialState","users","pageSize","totalUserCount","currentPage","isFetching","followingProcess","followSucces","userId","type","id","unfollowSucces","toggleIsFetching","toggleFollowingProcess","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersPageReducer","state","action","followed","page","userCount","filter","UsersItem","style","row","leftColumn","avatar","src","photos","small","userPhoto","alt","disabled","some","followButton","onClick","unFollow","follow","rightColumn","descr","info","fullName","name","status","country","city","Paginator","totalItemCount","onPageChange","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","p","selectPage","pageCount","e","Users","title","usersList","unfollow","UsersContainer","getUsers","usersPage","render","Preloader","this","length","React","Component","connect","userAPI","followUser","bind","unFollowUser","getUserPage","data","error","totalCount","Header","aut_block","isAuth","login","authLogOut","auth_login","HeaderContainer","auth","initialized","appReducer","withSuspense","Suspense","fallback","reducers","combineReducers","profilePage","profilePageReducer","messagePage","messagePageReducer","authReducer","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","DialogsContainer","lazy","Login","ProfileContainer","App","getInitialized","path","component","AppContainer","withRouter","getAuth","then","SocialReactApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","email","setAuthUserData","payload","authAPI","authMe","getAuthLogIn","password","rememberMe","authLogIn","stopSubmit","_error","messages","preloader","module","exports","ADD_POST","postList","message","profile","userStatus","addNewPost","post","setUserStatus","getProfileInfo","getUserProfile","getStatus","profileAPI","getUserStatus","postStatus","putUserStatus","dialogList","messageList","accountId","postMessage","text","instance","axios","withCredentials","headers","baseURL","get","responce","delete","put"],"mappings":"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","file":"static/js/main.aaaa7a96.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport s from \"./Navbar.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nconst Navbar = (props) => {\r\n    /*\r\n    let friends = props.state.navbar.map(style =>\r\n        <li>\r\n            <img src=\"https://hornews.com/images/news_large/c1d4b2b8ec608ea72764c5678816d5c9.jpg\" alt=\"\"\r\n                 className={s.avatar}/>\r\n            <span className={s.name}>{style.accountName}</span>\r\n        </li>\r\n    );*/\r\n\r\n    return (<nav className={s.content}>\r\n            <ul>\r\n                <li className={s.item}><NavLink to='/profile' activeClassName={s.active}>Profile</NavLink></li>\r\n                <li className={s.item}><NavLink to='/dialogs' activeClassName={s.active}>Messages</NavLink></li>\r\n                <li className={s.item}><NavLink to=\"/news\" activeClassName={s.active}>News</NavLink></li>\r\n                <li className={s.item}><NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink></li>\r\n                <li className={s.item}><NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink></li>\r\n                <li className={s.item}><NavLink to=\"/users\" activeClassName={s.active}>Users</NavLink></li>\r\n            </ul>\r\n            <div className=\"friendsList\">\r\n                <ul className={s.friends}>\r\n                    {/*{friends}*/}\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react'\r\nimport s from './News.module.css'\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\n\r\nexport  default  News;","import React from 'react'\r\nimport s from './Music.module.css'\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\n\r\nexport  default  Music;","import React from 'react'\r\nimport s from './Settings.module.css'\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\n\r\nexport  default  Settings;","export const updateObjectsInArray = (items, itemId, objPropsName, newObjProp) => {\r\n    return items.map(u => {\r\n        if (u[objPropsName] === itemId) {\r\n            return {...u, ...newObjProp}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import {userAPI} from \"../api/api\";\r\nimport {updateObjectsInArray} from \"../utils/reducerUtils\";\r\n\r\nconst FOLLOW = 'users/FOLLOW';\r\nconst UNFOLLOW = 'users/UNFOLLOW';\r\nconst SET_USERS = 'users/SET-USERS';\r\nconst SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USER_COUNT = 'users/SET_TOTAL_USER_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'users/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROCESS = 'users/TOGGLE_IS_FOLLOWING_PROCESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUserCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingProcess: []\r\n\r\n\r\n};\r\n\r\nconst usersPageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return (\r\n                {\r\n                    ...state, users: updateObjectsInArray(state.users, action.id,'id',  {followed: false})\r\n                }\r\n            );\r\n        case UNFOLLOW:\r\n            return (\r\n                {\r\n                    ...state, users: updateObjectsInArray(state.users, action.id,'id', {followed: true})\r\n                }\r\n            );\r\n        case SET_USERS:\r\n            return {...state, users: action.users};\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.page};\r\n        case SET_TOTAL_USER_COUNT:\r\n            return {...state, totalUserCount: action.userCount};\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching};\r\n        case TOGGLE_IS_FOLLOWING_PROCESS:\r\n            return {\r\n                ...state, followingProcess: action.followingProcess\r\n                    ? [...state.followingProcess, action.id]\r\n                    : state.followingProcess.filter(id => id != action.id)\r\n            };\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\n\r\nexport const followSucces = (userId) => ({type: FOLLOW, id: userId});\r\nexport const unfollowSucces = (userId) => ({type: UNFOLLOW, id: userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (page) => ({type: SET_CURRENT_PAGE, page});\r\nexport const setTotalUserCount = (userCount) => ({type: SET_TOTAL_USER_COUNT, userCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProcess = (followingProcess, id) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROCESS,\r\n    followingProcess,\r\n    id\r\n});\r\n\r\n\r\nconst followUnfollowFlow = async (dispatch, id, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProcess(true, id));\r\n\r\n    let data = await apiMethod(id);\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(id));\r\n        dispatch(toggleFollowingProcess(false, id));\r\n    }\r\n}\r\n\r\nexport const getUsers = (pageSize, currentPage) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    let data = await userAPI.getUserPage(pageSize, currentPage);\r\n    if (data.error === null) {\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setCurrentPage(currentPage));\r\n        dispatch(setTotalUserCount(data.totalCount));\r\n        dispatch(toggleIsFetching(false));\r\n    }\r\n}\r\n\r\n\r\nexport const unfollow = (id) => (dispatch) => {\r\n    followUnfollowFlow(dispatch, id, userAPI.unFollowUser.bind(userAPI), followSucces);\r\n}\r\n\r\nexport const follow = (id) => (dispatch) => {\r\n    followUnfollowFlow(dispatch, id, userAPI.followUser.bind(userAPI), unfollowSucces);\r\n}\r\n\r\nexport default usersPageReducer;","import style from \"../Users.module.css\";\r\nimport React from \"react\";\r\nimport userPhoto from '../../../assets/images/User.png'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst UsersItem = (props) => {\r\n    return (\r\n        <div className={style.row}>\r\n            <div className={style.leftColumn}>\r\n                <div>\r\n                    <NavLink to={'/profile/' + props.state.id}>\r\n                        <img className={style.avatar}\r\n                             src={props.state.photos.small != null ? props.state.photos.small : userPhoto}\r\n                             alt=\"\"/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                        <button disabled={props.followingProcess.some(id => id === props.state.id)} className={style.followButton}\r\n                                 onClick={() => {\r\n                                     props.state.followed ? props.unFollow(props.state.id) : props.follow(props.state.id)\r\n                        }}>{props.state.followed ? 'Follow' : 'unFollow'}</button>\r\n                </div>\r\n            </div>\r\n            <div className={style.rightColumn}>\r\n                <div className={style.descr}>\r\n                    <div className={style.info}>\r\n                        <div className={style.fullName}>{props.state.name}</div>\r\n                        <div className={style.status}>{props.state.status}</div>\r\n                    </div>\r\n                    <div className={style.location}>\r\n                        <div className={style.country}>\"props.location.country\"</div>\r\n                        <div className={style.city}>\"props.location.city\"</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default UsersItem;\r\n","import React, {useState} from 'react';\r\nimport style from './Paginator.module.css';\r\n\r\nlet Paginator = ({totalItemCount, pageSize, onPageChange, currentPage, portionSize = 10}) => {\r\n    let pagesCount = Math.ceil(totalItemCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div>\r\n\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber - 1)\r\n            }}> prev </button>}\r\n            {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p) => {\r\n                    return <button className={currentPage === p\r\n                        ? style.selectPage\r\n                        : style.pageCount}\r\n                                   onClick={(e) => {\r\n                                       onPageChange(p)\r\n                                   }}>{p}</button>\r\n                })}\r\n            {portionCount > portionNumber &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber + 1)\r\n            }}> next </button>}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport style from './Users.module.css';\r\nimport UsersItem from \"./UserItem/usersItem\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\n\r\nlet Users = (props) => {\r\n\r\n    return (\r\n        <div className={style.Users}>\r\n            <Paginator  totalItemCount={props.totalUserCount}\r\n                        pageSize={props.pageSize}\r\n                        currentPage={props.currentPage}\r\n                        onPageChange={props.onPageChange} />\r\n            <div className={style.title}>\r\n                <h3>Users</h3>\r\n            </div>\r\n            <div className={style.content}>\r\n                {props.usersList.map(i => <UsersItem state={i} follow={props.follow}\r\n                                                          unFollow={props.unfollow}\r\n                                                     toggleFollowingProcess={props.toggleFollowingProcess}\r\n                                                     followingProcess={props.followingProcess}/>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow, getUsers,\r\n    setCurrentPage,\r\n    toggleFollowingProcess,\r\n    toggleIsFetching,\r\n    unfollow\r\n} from \"../../Redux/usersPage-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        if (this.props.usersPage.users.length === 0) {\r\n            this.props.getUsers(this.props.usersPage.pageSize, this.props.usersPage.currentPage);\r\n        }\r\n    }\r\n\r\n    onPageChange = (currentPage) => {\r\n        this.props.getUsers(this.props.usersPage.pageSize, currentPage);\r\n    }\r\n    render = () => {\r\n        return <>\r\n            {this.props.usersPage.isFetching && <Preloader />}\r\n            <Users usersList={this.props.usersPage.users}\r\n                   totalUserCount={this.props.usersPage.totalUserCount}\r\n                   currentPage={this.props.usersPage.currentPage}\r\n                   pageSize={this.props.usersPage.pageSize}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   onPageChange={this.onPageChange}\r\n                   toggleFollowingProcess={this.props.toggleFollowingProcess}\r\n                   followingProcess={this.props.usersPage.followingProcess}\r\n        />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {usersPage: state.usersPage}\r\n};\r\n\r\nexport default connect(mapStateToProps, {follow, unfollow, toggleIsFetching, toggleFollowingProcess, getUsers})(UsersContainer);","import React from 'react';\r\nimport s from \"./Header.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (<header className={s.content}>\r\n            <div className={s.aut_block}>\r\n                {props.isAuth\r\n                    ? <div>{props.login}<button onClick={props.authLogOut}>Log Out</button></div>\r\n                    : <NavLink to='/login' className={s.auth_login}>Log in</NavLink> }\r\n            </div>\r\n            <img\r\n                src=\"https://st4.depositphotos.com/18657574/21182/v/1600/depositphotos_211824316-stock-illustration-drop-vector-icon-isolated-on.jpg\"\r\n                alt=\"\"/>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {authLogOut} from \"../../Redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n    render() {\r\n        return (<Header {...this.props} />)\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {authLogOut})(HeaderContainer);\r\n","import {getAuth} from \"./auth-reducer\";\r\n\r\nconst INITIALIZEDSUCCES = 'app/INITIALIZED_SUCCES';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n\r\n\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZEDSUCCES:\r\n            return (\r\n                {...state, initialized: true}\r\n            );\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\n\r\nexport const initializedSucces = () => ({type: INITIALIZEDSUCCES});\r\n\r\n\r\nexport const getInitialized = () => (dispatch) => {\r\n        let authPromise = dispatch(getAuth());\r\n        authPromise.then(() => {\r\n            dispatch(initializedSucces())\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\nexport default appReducer;","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<div>Завантаження...</div>}>< Component {...props} /> </React.Suspense>\r\n    }\r\n}\r\n\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profilePageReducer from \"./profilePage-reducer\";\r\nimport messagePageReducer from \"./messagePage-reducer\";\r\nimport usersPageReducer from \"./usersPage-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profilePageReducer,\r\n    messagePage: messagePageReducer,\r\n    usersPage: usersPageReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import React, {Component} from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport News from './components/News/News'\nimport Music from './components/Music/Music'\nimport Settings from './components/Settings/Settings'\nimport {HashRouter, Route, withRouter} from \"react-router-dom\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {getInitialized} from \"./Redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport {withSuspense} from \"./hoc/withSuspense\";\nimport store from \"./Redux/redux-store\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst Login = React.lazy(() => import('./components/login/Login'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.getInitialized();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Route path='/dialogs' render={withSuspense(DialogsContainer)}/>\n                    <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)}/>\n                    <Route path='/news' component={News}/>\n                    <Route path='/music' component={Music}/>\n                    <Route path='/settings' component={Settings}/>\n                    <Route path='/users' render={() => <UsersContainer/>}/>\n                    <Route path='/login' render={withSuspense(Login)}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer =  compose(\n    withRouter,\n    connect(mapStateToProps, {getInitialized}))(App);\n\n const SocialReactApp = (props) => {\n    return <HashRouter>\n        <Provider store={store}>\n            <AppContainer />\n        </Provider>\n    </HashRouter>\n}\n\nexport default SocialReactApp;","import React from 'react';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SocialReactApp from \"./App\";\n\n\nReactDOM.render(<SocialReactApp />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_AUTH_USER_DATA = 'auth/SET_AUTH_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    id: null,\r\n    Login: null,\r\n    email: null,\r\n    isAuth: false\r\n\r\n\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n            return (\r\n                {...state, ...action.payload}\r\n            );\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) => ({\r\n    type: SET_AUTH_USER_DATA,\r\n    payload: {id, email, login, isAuth}\r\n});\r\n\r\n\r\nexport const getAuth = () => async (dispatch) => {\r\n    let data = await authAPI.authMe();\r\n    if (data.resultCode === 0) {\r\n        let {id, email, login} = data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const getAuthLogIn = (Login, password, rememberMe) => async (dispatch) => {\r\n    let data = await authAPI.authLogIn(Login, password, rememberMe)\r\n    data.resultCode === 0\r\n        ? dispatch(getAuth())\r\n        : dispatch(stopSubmit('Login', {_error: data.messages[0]}))\r\n\r\n}\r\nexport const authLogOut = () => async (dispatch) => {\r\n    let data = await authAPI.authLogOut()\r\n    if (data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport preloader from '../../../assets/images/preloader.svg'\r\nimport style from './Preloader.css'\r\n\r\nlet Preloader = (props) => {\r\n    return <div className={style.preloader}>\r\n        <img src={preloader} alt=\"preloader\"/>\r\n    </div>\r\n}\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Header_content__1ct-I\",\"aut_block\":\"Header_aut_block__1toQx\",\"auth_login\":\"Header_auth_login__HO1wW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Users_avatar__XuHYu\",\"followButton\":\"Users_followButton__1VTHJ\",\"descr\":\"Users_descr__2krZC\",\"row\":\"Users_row__3u4ez\",\"leftColumn\":\"Users_leftColumn__2JemO\",\"fullName\":\"Users_fullName__1YTBe\",\"Users\":\"Users_Users__1MikA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageCount\":\"Paginator_pageCount__JP9Xo\",\"selectPage\":\"Paginator_selectPage__QAean\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Navbar_content__3WoHV\",\"item\":\"Navbar_item__3eujf\",\"active\":\"Navbar_active__2tyZ2\",\"avatar\":\"Navbar_avatar__uhAMI\",\"name\":\"Navbar_name__dnJMd\",\"friends\":\"Navbar_friends__1MEyB\"};","import {profileAPI, userAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'profile/ADD-POST';\r\nconst SET_USER_PROFILE = 'profile/SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'profile/SET_USER_STATUS';\r\n\r\nlet initialState = {\r\n    postList: [\r\n        {id: '1', message: 'Hi, bro!'},\r\n        {id: '2', message: 'Hi, are you doing ?'},\r\n        {id: '3', message: \"Five ocklock\"}\r\n    ],\r\n    profile: null,\r\n    userStatus: null\r\n};\r\n\r\nconst profilePageReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            return {\r\n                postList: [...state.postList, {id: '1', message: action.post}]\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state, profile: action.profile\r\n            };\r\n        }\r\n        case SET_USER_STATUS: {\r\n            return {\r\n                ...state, userStatus: action.status\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const addNewPost = (post) => ({type: ADD_POST, post});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setUserStatus = (status) => ({type: SET_USER_STATUS, status});\r\n\r\nexport const getProfileInfo = (userId) => async (dispatch) => {\r\n    let data = await userAPI.getUserProfile(userId);\r\n    if (data.status === 200) {\r\n        dispatch(setUserProfile(data.data));\r\n    }\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let data = await profileAPI.getUserStatus(userId);\r\n    if (data.status === 200) {\r\n        dispatch(setUserStatus(data.data));\r\n    }\r\n}\r\n\r\nexport const postStatus = (status) => async (dispatch) => {\r\n    let data = await profileAPI.putUserStatus(status);\r\n    if (data.resultCode === 0) {\r\n        dispatch(setUserStatus(status));\r\n    }\r\n}\r\nexport default profilePageReducer;","const ADD_MESSAGE = 'dialogs/ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n            dialogList: [\r\n                {id: '1', name: 'Valera'},\r\n                {id: '2', name: 'alcash'},\r\n                {id: '3', name: 'sanya'}\r\n            ],\r\n            messageList: [\r\n                {id: '1', message: 'Hi, i am victor!', accountId: 'ac_0'},\r\n                {id: '2', message: 'aksdjaklsdj', accountId: 'ac_1'},\r\n                {id: '3', message: 'Hi, bro!', accountId: 'ac_0'}\r\n            ]\r\n        };\r\n\r\nconst messagePageReducer = (state= initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE: {\r\n           return {...state,\r\n               messageList: [...state.messageList, {id: '4', message: action.text, accountId: 'ac_0'}]\r\n           };\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\n\r\n\r\nexport const postMessage = (text) => ({type: ADD_MESSAGE, text});\r\n\r\nexport default  messagePageReducer;","module.exports = __webpack_public_path__ + \"static/media/User.9c5cb55e.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.0dfc1dd4.svg\";","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': 'bad252bd-cdeb-4caf-8512-c5b0f8432e9e'\r\n    },\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/'\r\n});\r\n\r\nexport const userAPI = {\r\n    getUserPage(pageSize, currentPage) {\r\n        return instance.get(`users?count=${pageSize}&page=${currentPage}`)\r\n            .then(responce => {\r\n                return responce.data\r\n            });\r\n    },\r\n    unFollowUser(id) {\r\n        return instance.delete(`follow/${id}`)\r\n            .then(responce => {\r\n                return responce.data;\r\n            })\r\n    },\r\n    followUser(id) {\r\n        return instance.post(`follow/${id}`)\r\n            .then(responce => {\r\n                return responce.data;\r\n            })\r\n    },\r\n    getUserProfile(id) {\r\n        return profileAPI.getUserProfile(id)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get(`auth/me`).then(responce => {\r\n            return responce.data\r\n        })\r\n    },\r\n    authLogIn(Login, password, rememberMe=false) {\r\n        return instance.post(`/auth/login`,\r\n            {\r\n                email: Login,\r\n                password: password,\r\n                rememberMe: rememberMe\r\n            }\r\n        ).then(responce => {\r\n            return responce.data\r\n        })\r\n    },\r\n    authLogOut() {\r\n        return instance.delete(`/auth/login`\r\n        ).then(responce => {\r\n            return responce.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserProfile(id) {\r\n        return instance.get(`profile/${id}`).then(responce => {\r\n            return responce;\r\n        })\r\n    },\r\n    getUserStatus(userId) {\r\n        return instance.get(`/profile/status/${userId}`).then(responce => {\r\n            return responce\r\n        })\r\n    },\r\n    putUserStatus(status) {\r\n        return instance.put(`/profile/status`, {status: status}).then(responce => {\r\n            return responce.data\r\n        })\r\n    }\r\n}"],"sourceRoot":""}