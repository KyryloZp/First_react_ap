{"version":3,"sources":["utils/validators.js","components/common/FormsControls/FormsControls.jsx","components/Profile/Profile.module.css","components/Profile/Posts/ProfileInfo/ProfileInfo.module.css","components/Profile/Posts/Posts.module.css","components/Profile/Posts/Post/Post.module.css","components/Profile/Posts/ProfileInfo/ProfileInfo.jsx","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Posts/PostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["required","value","maxLength","formLength","length","renderInput","input","meta","props","hasError","touched","error","className","renderTextarea","typeInput","module","exports","ProfileInfo","useState","editMode","setEditMode","status","setStatus","useEffect","s","info","avatar","src","state","photos","small","alt","about","name","fullName","onBlur","postStatus","autoFocus","onChange","e","currentTarget","onDoubleClick","jobDesrc","lookingForAJobDescription","lookingJob","lookingForAJob","webSite","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","Post","item","message","maxFormLength","PostForm","onSubmit","handleSubmit","Field","placeholder","component","validate","type","reduxForm","form","Posts","postList","map","m","id","key","wall","formData","addNewPost","newPost","posts","PostsContainer","connect","profilePage","dispatch","text","Profile","profile","wallper","Preloader","ProfileContainer","userId","this","match","params","authUserId","history","push","getProfileInfo","getStatus","React","Component","compose","userStatus","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.e2583128.chunk.js","sourcesContent":["export const required = value => {\r\n    if (value) return undefined;\r\n    return 'This field is required';\r\n}\r\n\r\nexport const maxLength = (formLength) => (value) => {\r\n    if (value.length > formLength) return `max length is ${formLength} symbols`;\r\n    return undefined;\r\n};","import React from \"react\";\r\nimport styles from \"./FormsControls.css\";\r\n\r\nexport const renderInput = ({ input, meta, ...props }) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div>\r\n            <div >\r\n                <input {...props} {...input} className={'formValidate' + \" \"  + (hasError ? 'error' : \"\")} />\r\n            </div>\r\n            <div>\r\n                {hasError && <span className='validateDescription'>{meta.error}</span>}\r\n            </div>\r\n\r\n        </div>\r\n        )\r\n};\r\n\r\nexport const renderTextarea = ({ input, meta, ...props }, typeInput) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div>\r\n            <div >\r\n                <textarea {...props} {...input} className={'formValidate' + \" \"  + (hasError ? 'error' : \"\")} />\r\n            </div>\r\n            <div>\r\n                {hasError && <span className='validateDescription'>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wallper\":\"Profile_wallper__3WJYR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"ProfileInfo_avatar__LGJCN\",\"info\":\"ProfileInfo_info__satQk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Posts_content__3_JTT\",\"wallper\":\"Posts_wallper__3eZTL\",\"avatar\":\"Posts_avatar__1vpWf\",\"info\":\"Posts_info__1JcYI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3kbEL\"};","import React, {useState, useEffect} from 'react';\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status] );\r\n\r\n    let editModeActivate = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    let DeactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.postStatus(status);\r\n    };\r\n\r\n    let onChangeStatus = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    };\r\n\r\n    return (\r\n        <div className={s.info}>\r\n            <div className={s.avatar}>\r\n                <img src={props.state.photos.small} alt=\"s\"/>\r\n            </div>\r\n            <div className={s.about}>\r\n                <div className={s.name}>\r\n                    {props.state.fullName}\r\n                </div>\r\n                <div className={s.status}>\r\n                    {editMode ? <input value={status} onBlur={DeactivateEditMode}\r\n                                                  autoFocus={true} onChange={onChangeStatus}/>\r\n                        : <span onDoubleClick={editModeActivate}>{props.status || 'Статуса нет'}</span>}\r\n                </div>\r\n                <div className={s.jobDesrc}>\r\n                    {props.state.lookingForAJobDescription}\r\n                </div>\r\n                <div className={s.lookingJob}>\r\n                    {props.state.lookingForAJob ? 'В поисках' : 'Работаю'}\r\n                </div>\r\n                <div className={s.webSite}>\r\n                    <h3>Contacts:</h3>\r\n                    <div className={s.webSite}>\r\n                        <span>facebook:</span>\r\n                        <span>{props.state.contacts.facebook}</span>\r\n                    </div>\r\n                    <div className={s.webSite}>\r\n                        <span>website:</span>\r\n                        <span>{props.state.contacts.website}</span>\r\n                    </div>\r\n                    <div className={s.webSite}>\r\n                        <span>vk:</span>\r\n                        <span>{props.state.contacts.vk}</span>\r\n                    </div>\r\n                    <div className={s.webSite}>\r\n                        <span>twitter:</span>\r\n                        <span>{props.state.contacts.twitter}</span>\r\n                    </div>\r\n                    <div className={s.webSite}>\r\n                        <span>instagram:</span>\r\n                        <span>{props.state.contacts.instagram}</span>\r\n                    </div>\r\n                    <div className={s.webSite}>\r\n                        <span>youtube:</span>\r\n                        <span>{props.state.contacts.youtube}</span>\r\n                    </div>\r\n                    <div className={s.webSite}>\r\n                        <span>github:</span>\r\n                        <span>{props.state.contacts.github}</span>\r\n                    </div>\r\n                    <div className={s.webSite}>\r\n                        <span>mainLink:</span>\r\n                        <span>{props.state.contacts.mainLink}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://static.independent.co.uk/s3fs-public/thumbnails/image/2019/07/21/10/avatar-neytiri.jpg\"\r\n                 alt=\"\"/>\r\n            {props.message}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport s from \"./Posts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLength, required} from \"../../../utils/validators\";\r\nimport {renderTextarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nlet maxFormLength = maxLength(5);\r\n\r\nlet PostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field className=\"textInput\" name={'newPost'} placeholder='Enter your post' component={renderTextarea} validate={[required, maxFormLength]}></Field>\r\n            <button type={'submit'}>Add post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nPostForm = reduxForm({\r\n    form: 'PostForm'\r\n})(PostForm)\r\n\r\nconst Posts = (props) => {\r\n    const message = props.postList.map(m => <Post id={m.id} key={m.id} message={m.message}/>);\r\n    const onSubmit = (formData) => { props.addNewPost(formData.newPost)};\r\n\r\n    return (\r\n        <div className={s.wall}>\r\n            <PostForm onSubmit={onSubmit}/>\r\n            <div className={s.posts}>\r\n                {message}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Posts;\r\n","import React from 'react';\r\nimport {addNewPost} from \"../../../Redux/profilePage-reducer\";\r\nimport Posts from \"./Posts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n       postList: state.profilePage.postList\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n       addNewPost: (text) => {\r\n           debugger;\r\n          dispatch(addNewPost(text));\r\n       }\r\n    }\r\n}\r\n\r\n\r\nlet PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n\r\nexport default PostsContainer;","import React from 'react';\r\nimport s from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./Posts/ProfileInfo/ProfileInfo\";\r\nimport PostsContainer from \"./Posts/PostsContainer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nconst Profile = (props) => {\r\n    if(!props.profile){\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div>\r\n            <img\r\n                src=\"https://p.bigstockphoto.com/GeFvQkBbSLaMdpKXF1Zv_bigstock-Aerial-View-Of-Blue-Lakes-And--227291596.jpg\"\r\n                alt=\"\" className={s.wallper}/>\r\n            <ProfileInfo state={props.profile} status={props.status} postStatus={props.postStatus}/>\r\n            <PostsContainer  />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfileInfo, getStatus, postStatus} from \"../../Redux/profilePage-reducer\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = (this.props.match.params.userId);\r\n        if (!userId) {\r\n            userId = this.props.authUserId;\r\n            if (!userId) {\r\n               this.props.history.push('/login')\r\n            }\r\n\r\n        }\r\n\r\n        this.props.getProfileInfo(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                     postStatus={this.props.postStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.userStatus,\r\n    authUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfileInfo, getStatus, postStatus}),\r\n    withRouter\r\n)(ProfileContainer)"],"sourceRoot":""}