{"version":3,"sources":["utils/validators.js","components/common/FormsControls/FormsControls.jsx","components/Dialogs/Messages/Messages.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/Dialog/Dialog.module.css","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Messages/Messages.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["required","value","maxLength","formLength","length","renderInput","input","meta","props","hasError","touched","error","className","renderTextarea","typeInput","module","exports","Dialog","to","accountId","s","item","src","alt","avatar","name","Messages","ac_0","ac_1","content","maxFormLength","DialogForm","onSubmit","handleSubmit","Field","textBox","component","placeholder","validate","addMessage","type","reduxForm","form","Dialogs","Message","messageList","map","m","message","key","id","DialogList","dialogList","d","dialogs","title","dialogeList","messagBlock","messages","formData","postMessage","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","messagePage","dispatch","text","Component","RedirectComponent","this","React"],"mappings":"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","file":"static/js/5.9bd57537.chunk.js","sourcesContent":["export const required = value => {\r\n    if (value) return undefined;\r\n    return 'This field is required';\r\n}\r\n\r\nexport const maxLength = (formLength) => (value) => {\r\n    if (value.length > formLength) return `max length is ${formLength} symbols`;\r\n    return undefined;\r\n};","import React from \"react\";\r\nimport styles from \"./FormsControls.css\";\r\n\r\nexport const renderInput = ({ input, meta, ...props }) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div>\r\n            <div >\r\n                <input {...props} {...input} className={'formValidate' + \" \"  + (hasError ? 'error' : \"\")} />\r\n            </div>\r\n            <div>\r\n                {hasError && <span className='validateDescription'>{meta.error}</span>}\r\n            </div>\r\n\r\n        </div>\r\n        )\r\n};\r\n\r\nexport const renderTextarea = ({ input, meta, ...props }, typeInput) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div>\r\n            <div >\r\n                <textarea {...props} {...input} className={'formValidate' + \" \"  + (hasError ? 'error' : \"\")} />\r\n            </div>\r\n            <div>\r\n                {hasError && <span className='validateDescription'>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Messages_item__2R5ol\",\"ac_0\":\"Messages_ac_0__3mcR5\",\"ac_1\":\"Messages_ac_1__3DoCT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1jYNT\",\"title\":\"Dialogs_title__3XnnU\",\"dialogeList\":\"Dialogs_dialogeList__1ky15\",\"messagBlock\":\"Dialogs_messagBlock__1YDgj\",\"messages\":\"Dialogs_messages__2jI3P\",\"textBox\":\"Dialogs_textBox__1CI_t\",\"addMessage\":\"Dialogs_addMessage__2T9fj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Dialog_item__trTDH\",\"avatar\":\"Dialog_avatar__1xjfI\",\"name\":\"Dialog_name__3wM16\"};","import React from 'react'\r\nimport s from './Dialog.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Dialog = (props) => {\r\n    return (\r\n        <NavLink to={`/dialogs/${props.accountId}`} className={s.item}>\r\n            <img src=\"https://hornews.com/images/news_large/c1d4b2b8ec608ea72764c5678816d5c9.jpg\" alt=\"\"\r\n                 className={s.avatar}/>\r\n            <span className={s.name}>{props.name}</span>\r\n        </NavLink>\r\n    );\r\n}\r\n\r\nexport default Dialog;","import React from 'react'\r\nimport s from './Messages.module.css'\r\nimport './Messages.module.css'\r\n\r\n\r\n\r\n\r\nconst Messages = (props) => {\r\n    return (\r\n        <div className={`${s.item} ${ props.accountId =='ac_0' ? s.ac_0 : s.ac_1 }`} >\r\n            <span>{props.content}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Messages;","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport Messages from \"./Messages/Messages\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {getAuthLogIn} from \"../../Redux/auth-reducer\";\r\nimport {maxLength, required} from \"../../utils/validators\";\r\nimport {renderTextarea} from \"../common/FormsControls/FormsControls\";\r\n\r\nconst maxFormLength = maxLength(5);\r\n\r\n\r\nlet DialogForm = (props) => {\r\n    return (\r\n    <form onSubmit={props.handleSubmit}>\r\n       <Field name=\"message\" className={s.textBox} component={renderTextarea} placeholder='Enter your message' validate={[required, maxFormLength]} />\r\n        <button className={s.addMessage} type='submit'>Add message</button>\r\n    </form>\r\n    )}\r\n\r\n    DialogForm = reduxForm({\r\n        form: 'DialogForm'\r\n    })(DialogForm);\r\n\r\nconst Dialogs = (props) => {\r\n    let Message = props.messageList.map(m => <Messages content={m.message} key={m.id} accountId={m.accountId}/>);\r\n    let DialogList = props.dialogList.map(d => <Dialog name={d.name} key={d.id} accountId={d.id}/>);\r\n\r\n    const onsubmit = (formData) => {\r\n        props.postMessage(formData.message)\r\n    };\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <h2 className={s.title}>Диалоги</h2>\r\n            <div className={s.dialogeList}>\r\n                {DialogList}\r\n            </div>\r\n            <div className={s.messagBlock}>\r\n                <div className={s.messages}>\r\n                    {Message}\r\n                </div>\r\n                <DialogForm  onSubmit={onsubmit}/>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to='/login'/>;\r\n            return < Component {...this.props} />\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n\r\n","import React from 'react';\r\nimport Dialogs from \"./Dialogs\";\r\nimport {postMessage} from \"../../Redux/messagePage-reducer\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogList: state.messagePage.dialogList,\r\n        messageList: state.messagePage.messageList\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      postMessage: (text) => {\r\n          dispatch(postMessage(text))\r\n      }\r\n  }\r\n};\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps),withAuthRedirect)(Dialogs)\r\n\r\n"],"sourceRoot":""}